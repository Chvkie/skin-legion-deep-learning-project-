tf.random.set_seed(42)

model = tf.keras.Sequential([
    #tf.keras.layers.Flatten(input_shape=(224, 224)),
    tf.keras.layers.Dense(units= 16, kernel_initializer = 'uniform', activation = 'relu'),
    tf.keras.layers.Dense(units= 32, kernel_initializer = 'uniform', activation = 'relu'),
    tf.keras.layers.Dense(units= 64, kernel_initializer = 'uniform', activation = 'relu'),
    tf.keras.layers.Dense(units= 128, kernel_initializer = 'uniform', activation = 'relu'),
    #tf.keras.layers.Dense(units= 512, kernel_initializer = 'uniform', activation = 'relu'),
    tf.keras.layers.Dense(units = 7, kernel_initializer = 'uniform', activation = 'softmax')])

optimizer = tf.keras.optimizers.Adam(learning_rate = 0.0008,
                                    beta_1 = 0.9,
                                    beta_2 = 0.999,
                                    epsilon = 1e-8)

# compile the keras model
model.compile(optimizer = optimizer, 
              loss = tf.keras.losses.CategoricalCrossentropy(),
              metrics = ['accuracy'])

# fit the keras model on the dataset
epochs = 40
history = model.fit(x_train,
                    y_train, 
                    batch_size = 100, 
                    epochs = epochs,
                    validation_data = (x_val,y_val)) #, # verbose = 0)
